
final ph code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00000708  0000079c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000708  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800106  00800106  000007a2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000007a2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000007d4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  00000814  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000018e7  00000000  00000000  000008dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000861  00000000  00000000  000021c3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009e1  00000000  00000000  00002a24  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c4  00000000  00000000  00003408  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004e2  00000000  00000000  000035cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b92  00000000  00000000  00003aae  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  00004640  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 e0       	ldi	r30, 0x08	; 8
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 30       	cpi	r26, 0x06	; 6
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e0       	ldi	r26, 0x06	; 6
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ae 30       	cpi	r26, 0x0E	; 14
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 64 02 	call	0x4c8	; 0x4c8 <main>
  9e:	0c 94 82 03 	jmp	0x704	; 0x704 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <pinChange>:
}

void Lcd4_Shift_Left()
{
	Lcd4_Cmd(0x01);
	Lcd4_Cmd(0x08);
  a6:	67 2b       	or	r22, r23
  a8:	09 f0       	breq	.+2      	; 0xac <pinChange+0x6>
  aa:	72 c0       	rjmp	.+228    	; 0x190 <pinChange+0xea>
  ac:	00 97       	sbiw	r24, 0x00	; 0
  ae:	11 f4       	brne	.+4      	; 0xb4 <pinChange+0xe>
  b0:	28 98       	cbi	0x05, 0	; 5
  b2:	08 95       	ret
  b4:	81 30       	cpi	r24, 0x01	; 1
  b6:	91 05       	cpc	r25, r1
  b8:	11 f4       	brne	.+4      	; 0xbe <pinChange+0x18>
  ba:	29 98       	cbi	0x05, 1	; 5
  bc:	08 95       	ret
  be:	82 30       	cpi	r24, 0x02	; 2
  c0:	91 05       	cpc	r25, r1
  c2:	11 f4       	brne	.+4      	; 0xc8 <pinChange+0x22>
  c4:	2a 98       	cbi	0x05, 2	; 5
  c6:	08 95       	ret
  c8:	83 30       	cpi	r24, 0x03	; 3
  ca:	91 05       	cpc	r25, r1
  cc:	11 f4       	brne	.+4      	; 0xd2 <pinChange+0x2c>
  ce:	2b 98       	cbi	0x05, 3	; 5
  d0:	08 95       	ret
  d2:	84 30       	cpi	r24, 0x04	; 4
  d4:	91 05       	cpc	r25, r1
  d6:	11 f4       	brne	.+4      	; 0xdc <pinChange+0x36>
  d8:	2c 98       	cbi	0x05, 4	; 5
  da:	08 95       	ret
  dc:	85 30       	cpi	r24, 0x05	; 5
  de:	91 05       	cpc	r25, r1
  e0:	11 f4       	brne	.+4      	; 0xe6 <pinChange+0x40>
  e2:	2d 98       	cbi	0x05, 5	; 5
  e4:	08 95       	ret
  e6:	86 30       	cpi	r24, 0x06	; 6
  e8:	91 05       	cpc	r25, r1
  ea:	11 f4       	brne	.+4      	; 0xf0 <pinChange+0x4a>
  ec:	2e 98       	cbi	0x05, 6	; 5
  ee:	08 95       	ret
  f0:	87 30       	cpi	r24, 0x07	; 7
  f2:	91 05       	cpc	r25, r1
  f4:	11 f4       	brne	.+4      	; 0xfa <pinChange+0x54>
  f6:	2f 98       	cbi	0x05, 7	; 5
  f8:	08 95       	ret
  fa:	88 30       	cpi	r24, 0x08	; 8
  fc:	91 05       	cpc	r25, r1
  fe:	11 f4       	brne	.+4      	; 0x104 <pinChange+0x5e>
 100:	40 98       	cbi	0x08, 0	; 8
 102:	08 95       	ret
 104:	89 30       	cpi	r24, 0x09	; 9
 106:	91 05       	cpc	r25, r1
 108:	11 f4       	brne	.+4      	; 0x10e <pinChange+0x68>
 10a:	41 98       	cbi	0x08, 1	; 8
 10c:	08 95       	ret
 10e:	8a 30       	cpi	r24, 0x0A	; 10
 110:	91 05       	cpc	r25, r1
 112:	11 f4       	brne	.+4      	; 0x118 <pinChange+0x72>
 114:	42 98       	cbi	0x08, 2	; 8
 116:	08 95       	ret
 118:	8b 30       	cpi	r24, 0x0B	; 11
 11a:	91 05       	cpc	r25, r1
 11c:	11 f4       	brne	.+4      	; 0x122 <pinChange+0x7c>
 11e:	43 98       	cbi	0x08, 3	; 8
 120:	08 95       	ret
 122:	8c 30       	cpi	r24, 0x0C	; 12
 124:	91 05       	cpc	r25, r1
 126:	11 f4       	brne	.+4      	; 0x12c <pinChange+0x86>
 128:	44 98       	cbi	0x08, 4	; 8
 12a:	08 95       	ret
 12c:	8d 30       	cpi	r24, 0x0D	; 13
 12e:	91 05       	cpc	r25, r1
 130:	11 f4       	brne	.+4      	; 0x136 <pinChange+0x90>
 132:	45 98       	cbi	0x08, 5	; 8
 134:	08 95       	ret
 136:	8e 30       	cpi	r24, 0x0E	; 14
 138:	91 05       	cpc	r25, r1
 13a:	11 f4       	brne	.+4      	; 0x140 <pinChange+0x9a>
 13c:	46 98       	cbi	0x08, 6	; 8
 13e:	08 95       	ret
 140:	8f 30       	cpi	r24, 0x0F	; 15
 142:	91 05       	cpc	r25, r1
 144:	11 f4       	brne	.+4      	; 0x14a <pinChange+0xa4>
 146:	58 98       	cbi	0x0b, 0	; 11
 148:	08 95       	ret
 14a:	80 31       	cpi	r24, 0x10	; 16
 14c:	91 05       	cpc	r25, r1
 14e:	11 f4       	brne	.+4      	; 0x154 <pinChange+0xae>
 150:	59 98       	cbi	0x0b, 1	; 11
 152:	08 95       	ret
 154:	81 31       	cpi	r24, 0x11	; 17
 156:	91 05       	cpc	r25, r1
 158:	11 f4       	brne	.+4      	; 0x15e <pinChange+0xb8>
 15a:	5a 98       	cbi	0x0b, 2	; 11
 15c:	08 95       	ret
 15e:	82 31       	cpi	r24, 0x12	; 18
 160:	91 05       	cpc	r25, r1
 162:	11 f4       	brne	.+4      	; 0x168 <pinChange+0xc2>
 164:	5b 98       	cbi	0x0b, 3	; 11
 166:	08 95       	ret
 168:	83 31       	cpi	r24, 0x13	; 19
 16a:	91 05       	cpc	r25, r1
 16c:	11 f4       	brne	.+4      	; 0x172 <pinChange+0xcc>
 16e:	5c 98       	cbi	0x0b, 4	; 11
 170:	08 95       	ret
 172:	84 31       	cpi	r24, 0x14	; 20
 174:	91 05       	cpc	r25, r1
 176:	11 f4       	brne	.+4      	; 0x17c <pinChange+0xd6>
 178:	5d 98       	cbi	0x0b, 5	; 11
 17a:	08 95       	ret
 17c:	85 31       	cpi	r24, 0x15	; 21
 17e:	91 05       	cpc	r25, r1
 180:	11 f4       	brne	.+4      	; 0x186 <pinChange+0xe0>
 182:	5e 98       	cbi	0x0b, 6	; 11
 184:	08 95       	ret
 186:	46 97       	sbiw	r24, 0x16	; 22
 188:	09 f0       	breq	.+2      	; 0x18c <pinChange+0xe6>
 18a:	72 c0       	rjmp	.+228    	; 0x270 <pinChange+0x1ca>
 18c:	5f 98       	cbi	0x0b, 7	; 11
 18e:	08 95       	ret
 190:	00 97       	sbiw	r24, 0x00	; 0
 192:	11 f4       	brne	.+4      	; 0x198 <pinChange+0xf2>
 194:	28 9a       	sbi	0x05, 0	; 5
 196:	08 95       	ret
 198:	81 30       	cpi	r24, 0x01	; 1
 19a:	91 05       	cpc	r25, r1
 19c:	11 f4       	brne	.+4      	; 0x1a2 <pinChange+0xfc>
 19e:	29 9a       	sbi	0x05, 1	; 5
 1a0:	08 95       	ret
 1a2:	82 30       	cpi	r24, 0x02	; 2
 1a4:	91 05       	cpc	r25, r1
 1a6:	11 f4       	brne	.+4      	; 0x1ac <pinChange+0x106>
 1a8:	2a 9a       	sbi	0x05, 2	; 5
 1aa:	08 95       	ret
 1ac:	83 30       	cpi	r24, 0x03	; 3
 1ae:	91 05       	cpc	r25, r1
 1b0:	11 f4       	brne	.+4      	; 0x1b6 <pinChange+0x110>
 1b2:	2b 9a       	sbi	0x05, 3	; 5
 1b4:	08 95       	ret
 1b6:	84 30       	cpi	r24, 0x04	; 4
 1b8:	91 05       	cpc	r25, r1
 1ba:	11 f4       	brne	.+4      	; 0x1c0 <pinChange+0x11a>
 1bc:	2c 9a       	sbi	0x05, 4	; 5
 1be:	08 95       	ret
 1c0:	85 30       	cpi	r24, 0x05	; 5
 1c2:	91 05       	cpc	r25, r1
 1c4:	11 f4       	brne	.+4      	; 0x1ca <pinChange+0x124>
 1c6:	2d 9a       	sbi	0x05, 5	; 5
 1c8:	08 95       	ret
 1ca:	86 30       	cpi	r24, 0x06	; 6
 1cc:	91 05       	cpc	r25, r1
 1ce:	11 f4       	brne	.+4      	; 0x1d4 <pinChange+0x12e>
 1d0:	2e 9a       	sbi	0x05, 6	; 5
 1d2:	08 95       	ret
 1d4:	87 30       	cpi	r24, 0x07	; 7
 1d6:	91 05       	cpc	r25, r1
 1d8:	11 f4       	brne	.+4      	; 0x1de <pinChange+0x138>
 1da:	2f 9a       	sbi	0x05, 7	; 5
 1dc:	08 95       	ret
 1de:	88 30       	cpi	r24, 0x08	; 8
 1e0:	91 05       	cpc	r25, r1
 1e2:	11 f4       	brne	.+4      	; 0x1e8 <pinChange+0x142>
 1e4:	40 9a       	sbi	0x08, 0	; 8
 1e6:	08 95       	ret
 1e8:	89 30       	cpi	r24, 0x09	; 9
 1ea:	91 05       	cpc	r25, r1
 1ec:	11 f4       	brne	.+4      	; 0x1f2 <pinChange+0x14c>
 1ee:	41 9a       	sbi	0x08, 1	; 8
 1f0:	08 95       	ret
 1f2:	8a 30       	cpi	r24, 0x0A	; 10
 1f4:	91 05       	cpc	r25, r1
 1f6:	11 f4       	brne	.+4      	; 0x1fc <pinChange+0x156>
 1f8:	42 9a       	sbi	0x08, 2	; 8
 1fa:	08 95       	ret
 1fc:	8b 30       	cpi	r24, 0x0B	; 11
 1fe:	91 05       	cpc	r25, r1
 200:	11 f4       	brne	.+4      	; 0x206 <pinChange+0x160>
 202:	43 9a       	sbi	0x08, 3	; 8
 204:	08 95       	ret
 206:	8c 30       	cpi	r24, 0x0C	; 12
 208:	91 05       	cpc	r25, r1
 20a:	11 f4       	brne	.+4      	; 0x210 <pinChange+0x16a>
 20c:	44 9a       	sbi	0x08, 4	; 8
 20e:	08 95       	ret
 210:	8d 30       	cpi	r24, 0x0D	; 13
 212:	91 05       	cpc	r25, r1
 214:	11 f4       	brne	.+4      	; 0x21a <pinChange+0x174>
 216:	45 9a       	sbi	0x08, 5	; 8
 218:	08 95       	ret
 21a:	8e 30       	cpi	r24, 0x0E	; 14
 21c:	91 05       	cpc	r25, r1
 21e:	11 f4       	brne	.+4      	; 0x224 <pinChange+0x17e>
 220:	46 9a       	sbi	0x08, 6	; 8
 222:	08 95       	ret
 224:	8f 30       	cpi	r24, 0x0F	; 15
 226:	91 05       	cpc	r25, r1
 228:	11 f4       	brne	.+4      	; 0x22e <pinChange+0x188>
 22a:	58 9a       	sbi	0x0b, 0	; 11
 22c:	08 95       	ret
 22e:	80 31       	cpi	r24, 0x10	; 16
 230:	91 05       	cpc	r25, r1
 232:	11 f4       	brne	.+4      	; 0x238 <pinChange+0x192>
 234:	59 9a       	sbi	0x0b, 1	; 11
 236:	08 95       	ret
 238:	81 31       	cpi	r24, 0x11	; 17
 23a:	91 05       	cpc	r25, r1
 23c:	11 f4       	brne	.+4      	; 0x242 <pinChange+0x19c>
 23e:	5a 9a       	sbi	0x0b, 2	; 11
 240:	08 95       	ret
 242:	82 31       	cpi	r24, 0x12	; 18
 244:	91 05       	cpc	r25, r1
 246:	11 f4       	brne	.+4      	; 0x24c <pinChange+0x1a6>
 248:	5b 9a       	sbi	0x0b, 3	; 11
 24a:	08 95       	ret
 24c:	83 31       	cpi	r24, 0x13	; 19
 24e:	91 05       	cpc	r25, r1
 250:	11 f4       	brne	.+4      	; 0x256 <pinChange+0x1b0>
 252:	5c 9a       	sbi	0x0b, 4	; 11
 254:	08 95       	ret
 256:	84 31       	cpi	r24, 0x14	; 20
 258:	91 05       	cpc	r25, r1
 25a:	11 f4       	brne	.+4      	; 0x260 <pinChange+0x1ba>
 25c:	5d 9a       	sbi	0x0b, 5	; 11
 25e:	08 95       	ret
 260:	85 31       	cpi	r24, 0x15	; 21
 262:	91 05       	cpc	r25, r1
 264:	11 f4       	brne	.+4      	; 0x26a <pinChange+0x1c4>
 266:	5e 9a       	sbi	0x0b, 6	; 11
 268:	08 95       	ret
 26a:	46 97       	sbiw	r24, 0x16	; 22
 26c:	09 f4       	brne	.+2      	; 0x270 <pinChange+0x1ca>
 26e:	5f 9a       	sbi	0x0b, 7	; 11
 270:	08 95       	ret

00000272 <Lcd4_Port>:
 272:	cf 93       	push	r28
 274:	c8 2f       	mov	r28, r24
 276:	80 ff       	sbrs	r24, 0
 278:	07 c0       	rjmp	.+14     	; 0x288 <Lcd4_Port+0x16>
 27a:	61 e0       	ldi	r22, 0x01	; 1
 27c:	70 e0       	ldi	r23, 0x00	; 0
 27e:	83 e1       	ldi	r24, 0x13	; 19
 280:	90 e0       	ldi	r25, 0x00	; 0
 282:	0e 94 53 00 	call	0xa6	; 0xa6 <pinChange>
 286:	06 c0       	rjmp	.+12     	; 0x294 <Lcd4_Port+0x22>
 288:	60 e0       	ldi	r22, 0x00	; 0
 28a:	70 e0       	ldi	r23, 0x00	; 0
 28c:	83 e1       	ldi	r24, 0x13	; 19
 28e:	90 e0       	ldi	r25, 0x00	; 0
 290:	0e 94 53 00 	call	0xa6	; 0xa6 <pinChange>
 294:	c1 ff       	sbrs	r28, 1
 296:	07 c0       	rjmp	.+14     	; 0x2a6 <Lcd4_Port+0x34>
 298:	61 e0       	ldi	r22, 0x01	; 1
 29a:	70 e0       	ldi	r23, 0x00	; 0
 29c:	84 e1       	ldi	r24, 0x14	; 20
 29e:	90 e0       	ldi	r25, 0x00	; 0
 2a0:	0e 94 53 00 	call	0xa6	; 0xa6 <pinChange>
 2a4:	06 c0       	rjmp	.+12     	; 0x2b2 <Lcd4_Port+0x40>
 2a6:	60 e0       	ldi	r22, 0x00	; 0
 2a8:	70 e0       	ldi	r23, 0x00	; 0
 2aa:	84 e1       	ldi	r24, 0x14	; 20
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	0e 94 53 00 	call	0xa6	; 0xa6 <pinChange>
 2b2:	c2 ff       	sbrs	r28, 2
 2b4:	07 c0       	rjmp	.+14     	; 0x2c4 <Lcd4_Port+0x52>
 2b6:	61 e0       	ldi	r22, 0x01	; 1
 2b8:	70 e0       	ldi	r23, 0x00	; 0
 2ba:	85 e1       	ldi	r24, 0x15	; 21
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	0e 94 53 00 	call	0xa6	; 0xa6 <pinChange>
 2c2:	06 c0       	rjmp	.+12     	; 0x2d0 <Lcd4_Port+0x5e>
 2c4:	60 e0       	ldi	r22, 0x00	; 0
 2c6:	70 e0       	ldi	r23, 0x00	; 0
 2c8:	85 e1       	ldi	r24, 0x15	; 21
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	0e 94 53 00 	call	0xa6	; 0xa6 <pinChange>
 2d0:	c3 ff       	sbrs	r28, 3
 2d2:	07 c0       	rjmp	.+14     	; 0x2e2 <Lcd4_Port+0x70>
 2d4:	61 e0       	ldi	r22, 0x01	; 1
 2d6:	70 e0       	ldi	r23, 0x00	; 0
 2d8:	86 e1       	ldi	r24, 0x16	; 22
 2da:	90 e0       	ldi	r25, 0x00	; 0
 2dc:	0e 94 53 00 	call	0xa6	; 0xa6 <pinChange>
 2e0:	06 c0       	rjmp	.+12     	; 0x2ee <Lcd4_Port+0x7c>
 2e2:	60 e0       	ldi	r22, 0x00	; 0
 2e4:	70 e0       	ldi	r23, 0x00	; 0
 2e6:	86 e1       	ldi	r24, 0x16	; 22
 2e8:	90 e0       	ldi	r25, 0x00	; 0
 2ea:	0e 94 53 00 	call	0xa6	; 0xa6 <pinChange>
 2ee:	cf 91       	pop	r28
 2f0:	08 95       	ret

000002f2 <Lcd4_Cmd>:
 2f2:	cf 93       	push	r28
 2f4:	c8 2f       	mov	r28, r24
 2f6:	60 e0       	ldi	r22, 0x00	; 0
 2f8:	70 e0       	ldi	r23, 0x00	; 0
 2fa:	86 e0       	ldi	r24, 0x06	; 6
 2fc:	90 e0       	ldi	r25, 0x00	; 0
 2fe:	0e 94 53 00 	call	0xa6	; 0xa6 <pinChange>
 302:	8c 2f       	mov	r24, r28
 304:	0e 94 39 01 	call	0x272	; 0x272 <Lcd4_Port>
 308:	61 e0       	ldi	r22, 0x01	; 1
 30a:	70 e0       	ldi	r23, 0x00	; 0
 30c:	87 e0       	ldi	r24, 0x07	; 7
 30e:	90 e0       	ldi	r25, 0x00	; 0
 310:	0e 94 53 00 	call	0xa6	; 0xa6 <pinChange>
 314:	89 ef       	ldi	r24, 0xF9	; 249
 316:	90 e0       	ldi	r25, 0x00	; 0
 318:	01 97       	sbiw	r24, 0x01	; 1
 31a:	f1 f7       	brne	.-4      	; 0x318 <Lcd4_Cmd+0x26>
 31c:	00 c0       	rjmp	.+0      	; 0x31e <Lcd4_Cmd+0x2c>
 31e:	00 00       	nop
 320:	60 e0       	ldi	r22, 0x00	; 0
 322:	70 e0       	ldi	r23, 0x00	; 0
 324:	87 e0       	ldi	r24, 0x07	; 7
 326:	90 e0       	ldi	r25, 0x00	; 0
 328:	0e 94 53 00 	call	0xa6	; 0xa6 <pinChange>
 32c:	89 ef       	ldi	r24, 0xF9	; 249
 32e:	90 e0       	ldi	r25, 0x00	; 0
 330:	01 97       	sbiw	r24, 0x01	; 1
 332:	f1 f7       	brne	.-4      	; 0x330 <Lcd4_Cmd+0x3e>
 334:	00 c0       	rjmp	.+0      	; 0x336 <Lcd4_Cmd+0x44>
 336:	00 00       	nop
 338:	cf 91       	pop	r28
 33a:	08 95       	ret

0000033c <Lcd4_Clear>:
 33c:	80 e0       	ldi	r24, 0x00	; 0
 33e:	0e 94 79 01 	call	0x2f2	; 0x2f2 <Lcd4_Cmd>
 342:	81 e0       	ldi	r24, 0x01	; 1
 344:	0e 94 79 01 	call	0x2f2	; 0x2f2 <Lcd4_Cmd>
 348:	08 95       	ret

0000034a <Lcd4_Set_Cursor>:
 34a:	cf 93       	push	r28
 34c:	c6 2f       	mov	r28, r22
 34e:	81 30       	cpi	r24, 0x01	; 1
 350:	59 f4       	brne	.+22     	; 0x368 <Lcd4_Set_Cursor+0x1e>
 352:	80 e8       	ldi	r24, 0x80	; 128
 354:	86 0f       	add	r24, r22
 356:	82 95       	swap	r24
 358:	8f 70       	andi	r24, 0x0F	; 15
 35a:	0e 94 79 01 	call	0x2f2	; 0x2f2 <Lcd4_Cmd>
 35e:	8c 2f       	mov	r24, r28
 360:	8f 70       	andi	r24, 0x0F	; 15
 362:	0e 94 79 01 	call	0x2f2	; 0x2f2 <Lcd4_Cmd>
 366:	0c c0       	rjmp	.+24     	; 0x380 <Lcd4_Set_Cursor+0x36>
 368:	82 30       	cpi	r24, 0x02	; 2
 36a:	51 f4       	brne	.+20     	; 0x380 <Lcd4_Set_Cursor+0x36>
 36c:	80 ec       	ldi	r24, 0xC0	; 192
 36e:	86 0f       	add	r24, r22
 370:	82 95       	swap	r24
 372:	8f 70       	andi	r24, 0x0F	; 15
 374:	0e 94 79 01 	call	0x2f2	; 0x2f2 <Lcd4_Cmd>
 378:	8c 2f       	mov	r24, r28
 37a:	8f 70       	andi	r24, 0x0F	; 15
 37c:	0e 94 79 01 	call	0x2f2	; 0x2f2 <Lcd4_Cmd>
 380:	cf 91       	pop	r28
 382:	08 95       	ret

00000384 <Lcd4_Init>:
 384:	80 e0       	ldi	r24, 0x00	; 0
 386:	0e 94 39 01 	call	0x272	; 0x272 <Lcd4_Port>
 38a:	87 e8       	ldi	r24, 0x87	; 135
 38c:	93 e1       	ldi	r25, 0x13	; 19
 38e:	01 97       	sbiw	r24, 0x01	; 1
 390:	f1 f7       	brne	.-4      	; 0x38e <Lcd4_Init+0xa>
 392:	00 c0       	rjmp	.+0      	; 0x394 <Lcd4_Init+0x10>
 394:	00 00       	nop
 396:	83 e0       	ldi	r24, 0x03	; 3
 398:	0e 94 79 01 	call	0x2f2	; 0x2f2 <Lcd4_Cmd>
 39c:	81 ee       	ldi	r24, 0xE1	; 225
 39e:	94 e0       	ldi	r25, 0x04	; 4
 3a0:	01 97       	sbiw	r24, 0x01	; 1
 3a2:	f1 f7       	brne	.-4      	; 0x3a0 <Lcd4_Init+0x1c>
 3a4:	00 c0       	rjmp	.+0      	; 0x3a6 <Lcd4_Init+0x22>
 3a6:	00 00       	nop
 3a8:	83 e0       	ldi	r24, 0x03	; 3
 3aa:	0e 94 79 01 	call	0x2f2	; 0x2f2 <Lcd4_Cmd>
 3ae:	8d eb       	ldi	r24, 0xBD	; 189
 3b0:	9a e0       	ldi	r25, 0x0A	; 10
 3b2:	01 97       	sbiw	r24, 0x01	; 1
 3b4:	f1 f7       	brne	.-4      	; 0x3b2 <Lcd4_Init+0x2e>
 3b6:	00 c0       	rjmp	.+0      	; 0x3b8 <Lcd4_Init+0x34>
 3b8:	00 00       	nop
 3ba:	83 e0       	ldi	r24, 0x03	; 3
 3bc:	0e 94 79 01 	call	0x2f2	; 0x2f2 <Lcd4_Cmd>
 3c0:	82 e0       	ldi	r24, 0x02	; 2
 3c2:	0e 94 79 01 	call	0x2f2	; 0x2f2 <Lcd4_Cmd>
 3c6:	82 e0       	ldi	r24, 0x02	; 2
 3c8:	0e 94 79 01 	call	0x2f2	; 0x2f2 <Lcd4_Cmd>
 3cc:	88 e0       	ldi	r24, 0x08	; 8
 3ce:	0e 94 79 01 	call	0x2f2	; 0x2f2 <Lcd4_Cmd>
 3d2:	80 e0       	ldi	r24, 0x00	; 0
 3d4:	0e 94 79 01 	call	0x2f2	; 0x2f2 <Lcd4_Cmd>
 3d8:	8c e0       	ldi	r24, 0x0C	; 12
 3da:	0e 94 79 01 	call	0x2f2	; 0x2f2 <Lcd4_Cmd>
 3de:	80 e0       	ldi	r24, 0x00	; 0
 3e0:	0e 94 79 01 	call	0x2f2	; 0x2f2 <Lcd4_Cmd>
 3e4:	86 e0       	ldi	r24, 0x06	; 6
 3e6:	0e 94 79 01 	call	0x2f2	; 0x2f2 <Lcd4_Cmd>
 3ea:	08 95       	ret

000003ec <Lcd4_Write_Char>:
 3ec:	cf 93       	push	r28
 3ee:	c8 2f       	mov	r28, r24
 3f0:	61 e0       	ldi	r22, 0x01	; 1
 3f2:	70 e0       	ldi	r23, 0x00	; 0
 3f4:	86 e0       	ldi	r24, 0x06	; 6
 3f6:	90 e0       	ldi	r25, 0x00	; 0
 3f8:	0e 94 53 00 	call	0xa6	; 0xa6 <pinChange>
 3fc:	8c 2f       	mov	r24, r28
 3fe:	82 95       	swap	r24
 400:	8f 70       	andi	r24, 0x0F	; 15
 402:	0e 94 39 01 	call	0x272	; 0x272 <Lcd4_Port>
 406:	61 e0       	ldi	r22, 0x01	; 1
 408:	70 e0       	ldi	r23, 0x00	; 0
 40a:	87 e0       	ldi	r24, 0x07	; 7
 40c:	90 e0       	ldi	r25, 0x00	; 0
 40e:	0e 94 53 00 	call	0xa6	; 0xa6 <pinChange>
 412:	89 ef       	ldi	r24, 0xF9	; 249
 414:	90 e0       	ldi	r25, 0x00	; 0
 416:	01 97       	sbiw	r24, 0x01	; 1
 418:	f1 f7       	brne	.-4      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 41a:	00 c0       	rjmp	.+0      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 41c:	00 00       	nop
 41e:	60 e0       	ldi	r22, 0x00	; 0
 420:	70 e0       	ldi	r23, 0x00	; 0
 422:	87 e0       	ldi	r24, 0x07	; 7
 424:	90 e0       	ldi	r25, 0x00	; 0
 426:	0e 94 53 00 	call	0xa6	; 0xa6 <pinChange>
 42a:	89 ef       	ldi	r24, 0xF9	; 249
 42c:	90 e0       	ldi	r25, 0x00	; 0
 42e:	01 97       	sbiw	r24, 0x01	; 1
 430:	f1 f7       	brne	.-4      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 432:	00 c0       	rjmp	.+0      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 434:	00 00       	nop
 436:	8c 2f       	mov	r24, r28
 438:	8f 70       	andi	r24, 0x0F	; 15
 43a:	0e 94 39 01 	call	0x272	; 0x272 <Lcd4_Port>
 43e:	61 e0       	ldi	r22, 0x01	; 1
 440:	70 e0       	ldi	r23, 0x00	; 0
 442:	87 e0       	ldi	r24, 0x07	; 7
 444:	90 e0       	ldi	r25, 0x00	; 0
 446:	0e 94 53 00 	call	0xa6	; 0xa6 <pinChange>
 44a:	89 ef       	ldi	r24, 0xF9	; 249
 44c:	90 e0       	ldi	r25, 0x00	; 0
 44e:	01 97       	sbiw	r24, 0x01	; 1
 450:	f1 f7       	brne	.-4      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 452:	00 c0       	rjmp	.+0      	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 454:	00 00       	nop
 456:	60 e0       	ldi	r22, 0x00	; 0
 458:	70 e0       	ldi	r23, 0x00	; 0
 45a:	87 e0       	ldi	r24, 0x07	; 7
 45c:	90 e0       	ldi	r25, 0x00	; 0
 45e:	0e 94 53 00 	call	0xa6	; 0xa6 <pinChange>
 462:	89 ef       	ldi	r24, 0xF9	; 249
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	01 97       	sbiw	r24, 0x01	; 1
 468:	f1 f7       	brne	.-4      	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 46a:	00 c0       	rjmp	.+0      	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 46c:	00 00       	nop
 46e:	cf 91       	pop	r28
 470:	08 95       	ret

00000472 <Lcd4_Write_String>:
 472:	cf 93       	push	r28
 474:	df 93       	push	r29
 476:	ec 01       	movw	r28, r24
 478:	88 81       	ld	r24, Y
 47a:	88 23       	and	r24, r24
 47c:	31 f0       	breq	.+12     	; 0x48a <Lcd4_Write_String+0x18>
 47e:	21 96       	adiw	r28, 0x01	; 1
 480:	0e 94 f6 01 	call	0x3ec	; 0x3ec <Lcd4_Write_Char>
 484:	89 91       	ld	r24, Y+
 486:	81 11       	cpse	r24, r1
 488:	fb cf       	rjmp	.-10     	; 0x480 <Lcd4_Write_String+0xe>
 48a:	df 91       	pop	r29
 48c:	cf 91       	pop	r28
 48e:	08 95       	ret

00000490 <Adcinit>:
#include "lcd.h"


void Adcinit()
{
	DDRC= 0b00000000;     // make port c as input
 490:	17 b8       	out	0x07, r1	; 7
	ADMUX=0b01000000;
 492:	80 e4       	ldi	r24, 0x40	; 64
 494:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	//ADMUX=0b01100000;
	ADCSRA = (1<<ADEN);
 498:	80 e8       	ldi	r24, 0x80	; 128
 49a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 49e:	08 95       	ret

000004a0 <AdcRead>:

float AdcRead(int a)
{
	unsigned short x;
	//ADMUX=0b01100000 + a;
	ADMUX=0b01000000 + a;
 4a0:	80 5c       	subi	r24, 0xC0	; 192
 4a2:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	ADCSRA = ADCSRA|(1<<ADSC);
 4a6:	ea e7       	ldi	r30, 0x7A	; 122
 4a8:	f0 e0       	ldi	r31, 0x00	; 0
 4aa:	80 81       	ld	r24, Z
 4ac:	80 64       	ori	r24, 0x40	; 64
 4ae:	80 83       	st	Z, r24
	while (ADCSRA & (1<<ADSC));
 4b0:	80 81       	ld	r24, Z
 4b2:	86 fd       	sbrc	r24, 6
 4b4:	fd cf       	rjmp	.-6      	; 0x4b0 <AdcRead+0x10>
	//x=ADCH;
	x = ADC;
 4b6:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 4ba:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
	return x ;
 4be:	80 e0       	ldi	r24, 0x00	; 0
 4c0:	90 e0       	ldi	r25, 0x00	; 0
 4c2:	0e 94 e7 02 	call	0x5ce	; 0x5ce <__floatunsisf>
}
 4c6:	08 95       	ret

000004c8 <main>:

float x_axis,y_axis;

int main(void)
{
	DDRB=0xFF;
 4c8:	8f ef       	ldi	r24, 0xFF	; 255
 4ca:	84 b9       	out	0x04, r24	; 4
	DDRD=0xFF;
 4cc:	8a b9       	out	0x0a, r24	; 10
	Adcinit();
 4ce:	0e 94 48 02 	call	0x490	; 0x490 <Adcinit>
	Lcd4_Init();
 4d2:	0e 94 c2 01 	call	0x384	; 0x384 <Lcd4_Init>
	 while (1)
	 {
		 //ADCSRA = ADCSRA|(1<<ADSC);
		// while (ADCSRA & (1<<ADSC));
		 //x_axis=ADCH;
		 x_axis=AdcRead(5);
 4d6:	85 e0       	ldi	r24, 0x05	; 5
 4d8:	90 e0       	ldi	r25, 0x00	; 0
 4da:	0e 94 50 02 	call	0x4a0	; 0x4a0 <AdcRead>
 4de:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <__data_end>
 4e2:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <__data_end+0x1>
 4e6:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__data_end+0x2>
 4ea:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <__data_end+0x3>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 4ee:	0e 94 b1 02 	call	0x562	; 0x562 <__fixsfsi>
 4f2:	dc 01       	movw	r26, r24
 4f4:	cb 01       	movw	r24, r22
 4f6:	4a e0       	ldi	r20, 0x0A	; 10
 4f8:	60 e0       	ldi	r22, 0x00	; 0
 4fa:	71 e0       	ldi	r23, 0x01	; 1
 4fc:	0e 94 4d 03 	call	0x69a	; 0x69a <__itoa_ncheck>
	     char *x="00000";
	     itoa(x_axis,x,10);
		 Lcd4_Set_Cursor(1,0);
 500:	60 e0       	ldi	r22, 0x00	; 0
 502:	81 e0       	ldi	r24, 0x01	; 1
 504:	0e 94 a5 01 	call	0x34a	; 0x34a <Lcd4_Set_Cursor>
		 Lcd4_Write_String(x);
 508:	80 e0       	ldi	r24, 0x00	; 0
 50a:	91 e0       	ldi	r25, 0x01	; 1
 50c:	0e 94 39 02 	call	0x472	; 0x472 <Lcd4_Write_String>
		//  _delay_ms(200);
		 //int Phadc = ADC_Read(4);
		 //itoa(Tempadc,str1,10);
		// itoa(Phadc,strk,10);
		
		 y_axis=AdcRead(4);
 510:	84 e0       	ldi	r24, 0x04	; 4
 512:	90 e0       	ldi	r25, 0x00	; 0
 514:	0e 94 50 02 	call	0x4a0	; 0x4a0 <AdcRead>
 518:	60 93 0a 01 	sts	0x010A, r22	; 0x80010a <y_axis>
 51c:	70 93 0b 01 	sts	0x010B, r23	; 0x80010b <y_axis+0x1>
 520:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <y_axis+0x2>
 524:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <y_axis+0x3>
 528:	0e 94 b1 02 	call	0x562	; 0x562 <__fixsfsi>
 52c:	dc 01       	movw	r26, r24
 52e:	cb 01       	movw	r24, r22
 530:	4a e0       	ldi	r20, 0x0A	; 10
 532:	60 e0       	ldi	r22, 0x00	; 0
 534:	71 e0       	ldi	r23, 0x01	; 1
 536:	0e 94 4d 03 	call	0x69a	; 0x69a <__itoa_ncheck>
		 char *y="00000";
		 itoa(y_axis,y,10);
		 Lcd4_Set_Cursor(1,8);
 53a:	68 e0       	ldi	r22, 0x08	; 8
 53c:	81 e0       	ldi	r24, 0x01	; 1
 53e:	0e 94 a5 01 	call	0x34a	; 0x34a <Lcd4_Set_Cursor>
		 Lcd4_Write_String(y);
 542:	80 e0       	ldi	r24, 0x00	; 0
 544:	91 e0       	ldi	r25, 0x01	; 1
 546:	0e 94 39 02 	call	0x472	; 0x472 <Lcd4_Write_String>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 54a:	2f e7       	ldi	r18, 0x7F	; 127
 54c:	8a e1       	ldi	r24, 0x1A	; 26
 54e:	96 e0       	ldi	r25, 0x06	; 6
 550:	21 50       	subi	r18, 0x01	; 1
 552:	80 40       	sbci	r24, 0x00	; 0
 554:	90 40       	sbci	r25, 0x00	; 0
 556:	e1 f7       	brne	.-8      	; 0x550 <main+0x88>
 558:	00 c0       	rjmp	.+0      	; 0x55a <main+0x92>
 55a:	00 00       	nop
		 _delay_ms(2000);
		 Lcd4_Clear();
 55c:	0e 94 9e 01 	call	0x33c	; 0x33c <Lcd4_Clear>
 560:	ba cf       	rjmp	.-140    	; 0x4d6 <main+0xe>

00000562 <__fixsfsi>:
 562:	0e 94 b8 02 	call	0x570	; 0x570 <__fixunssfsi>
 566:	68 94       	set
 568:	b1 11       	cpse	r27, r1
 56a:	0c 94 47 03 	jmp	0x68e	; 0x68e <__fp_szero>
 56e:	08 95       	ret

00000570 <__fixunssfsi>:
 570:	0e 94 2c 03 	call	0x658	; 0x658 <__fp_splitA>
 574:	88 f0       	brcs	.+34     	; 0x598 <__fixunssfsi+0x28>
 576:	9f 57       	subi	r25, 0x7F	; 127
 578:	98 f0       	brcs	.+38     	; 0x5a0 <__fixunssfsi+0x30>
 57a:	b9 2f       	mov	r27, r25
 57c:	99 27       	eor	r25, r25
 57e:	b7 51       	subi	r27, 0x17	; 23
 580:	b0 f0       	brcs	.+44     	; 0x5ae <__fixunssfsi+0x3e>
 582:	e1 f0       	breq	.+56     	; 0x5bc <__fixunssfsi+0x4c>
 584:	66 0f       	add	r22, r22
 586:	77 1f       	adc	r23, r23
 588:	88 1f       	adc	r24, r24
 58a:	99 1f       	adc	r25, r25
 58c:	1a f0       	brmi	.+6      	; 0x594 <__fixunssfsi+0x24>
 58e:	ba 95       	dec	r27
 590:	c9 f7       	brne	.-14     	; 0x584 <__fixunssfsi+0x14>
 592:	14 c0       	rjmp	.+40     	; 0x5bc <__fixunssfsi+0x4c>
 594:	b1 30       	cpi	r27, 0x01	; 1
 596:	91 f0       	breq	.+36     	; 0x5bc <__fixunssfsi+0x4c>
 598:	0e 94 46 03 	call	0x68c	; 0x68c <__fp_zero>
 59c:	b1 e0       	ldi	r27, 0x01	; 1
 59e:	08 95       	ret
 5a0:	0c 94 46 03 	jmp	0x68c	; 0x68c <__fp_zero>
 5a4:	67 2f       	mov	r22, r23
 5a6:	78 2f       	mov	r23, r24
 5a8:	88 27       	eor	r24, r24
 5aa:	b8 5f       	subi	r27, 0xF8	; 248
 5ac:	39 f0       	breq	.+14     	; 0x5bc <__fixunssfsi+0x4c>
 5ae:	b9 3f       	cpi	r27, 0xF9	; 249
 5b0:	cc f3       	brlt	.-14     	; 0x5a4 <__fixunssfsi+0x34>
 5b2:	86 95       	lsr	r24
 5b4:	77 95       	ror	r23
 5b6:	67 95       	ror	r22
 5b8:	b3 95       	inc	r27
 5ba:	d9 f7       	brne	.-10     	; 0x5b2 <__fixunssfsi+0x42>
 5bc:	3e f4       	brtc	.+14     	; 0x5cc <__fixunssfsi+0x5c>
 5be:	90 95       	com	r25
 5c0:	80 95       	com	r24
 5c2:	70 95       	com	r23
 5c4:	61 95       	neg	r22
 5c6:	7f 4f       	sbci	r23, 0xFF	; 255
 5c8:	8f 4f       	sbci	r24, 0xFF	; 255
 5ca:	9f 4f       	sbci	r25, 0xFF	; 255
 5cc:	08 95       	ret

000005ce <__floatunsisf>:
 5ce:	e8 94       	clt
 5d0:	09 c0       	rjmp	.+18     	; 0x5e4 <__floatsisf+0x12>

000005d2 <__floatsisf>:
 5d2:	97 fb       	bst	r25, 7
 5d4:	3e f4       	brtc	.+14     	; 0x5e4 <__floatsisf+0x12>
 5d6:	90 95       	com	r25
 5d8:	80 95       	com	r24
 5da:	70 95       	com	r23
 5dc:	61 95       	neg	r22
 5de:	7f 4f       	sbci	r23, 0xFF	; 255
 5e0:	8f 4f       	sbci	r24, 0xFF	; 255
 5e2:	9f 4f       	sbci	r25, 0xFF	; 255
 5e4:	99 23       	and	r25, r25
 5e6:	a9 f0       	breq	.+42     	; 0x612 <__floatsisf+0x40>
 5e8:	f9 2f       	mov	r31, r25
 5ea:	96 e9       	ldi	r25, 0x96	; 150
 5ec:	bb 27       	eor	r27, r27
 5ee:	93 95       	inc	r25
 5f0:	f6 95       	lsr	r31
 5f2:	87 95       	ror	r24
 5f4:	77 95       	ror	r23
 5f6:	67 95       	ror	r22
 5f8:	b7 95       	ror	r27
 5fa:	f1 11       	cpse	r31, r1
 5fc:	f8 cf       	rjmp	.-16     	; 0x5ee <__floatsisf+0x1c>
 5fe:	fa f4       	brpl	.+62     	; 0x63e <__floatsisf+0x6c>
 600:	bb 0f       	add	r27, r27
 602:	11 f4       	brne	.+4      	; 0x608 <__floatsisf+0x36>
 604:	60 ff       	sbrs	r22, 0
 606:	1b c0       	rjmp	.+54     	; 0x63e <__floatsisf+0x6c>
 608:	6f 5f       	subi	r22, 0xFF	; 255
 60a:	7f 4f       	sbci	r23, 0xFF	; 255
 60c:	8f 4f       	sbci	r24, 0xFF	; 255
 60e:	9f 4f       	sbci	r25, 0xFF	; 255
 610:	16 c0       	rjmp	.+44     	; 0x63e <__floatsisf+0x6c>
 612:	88 23       	and	r24, r24
 614:	11 f0       	breq	.+4      	; 0x61a <__floatsisf+0x48>
 616:	96 e9       	ldi	r25, 0x96	; 150
 618:	11 c0       	rjmp	.+34     	; 0x63c <__floatsisf+0x6a>
 61a:	77 23       	and	r23, r23
 61c:	21 f0       	breq	.+8      	; 0x626 <__floatsisf+0x54>
 61e:	9e e8       	ldi	r25, 0x8E	; 142
 620:	87 2f       	mov	r24, r23
 622:	76 2f       	mov	r23, r22
 624:	05 c0       	rjmp	.+10     	; 0x630 <__floatsisf+0x5e>
 626:	66 23       	and	r22, r22
 628:	71 f0       	breq	.+28     	; 0x646 <__floatsisf+0x74>
 62a:	96 e8       	ldi	r25, 0x86	; 134
 62c:	86 2f       	mov	r24, r22
 62e:	70 e0       	ldi	r23, 0x00	; 0
 630:	60 e0       	ldi	r22, 0x00	; 0
 632:	2a f0       	brmi	.+10     	; 0x63e <__floatsisf+0x6c>
 634:	9a 95       	dec	r25
 636:	66 0f       	add	r22, r22
 638:	77 1f       	adc	r23, r23
 63a:	88 1f       	adc	r24, r24
 63c:	da f7       	brpl	.-10     	; 0x634 <__floatsisf+0x62>
 63e:	88 0f       	add	r24, r24
 640:	96 95       	lsr	r25
 642:	87 95       	ror	r24
 644:	97 f9       	bld	r25, 7
 646:	08 95       	ret

00000648 <__fp_split3>:
 648:	57 fd       	sbrc	r21, 7
 64a:	90 58       	subi	r25, 0x80	; 128
 64c:	44 0f       	add	r20, r20
 64e:	55 1f       	adc	r21, r21
 650:	59 f0       	breq	.+22     	; 0x668 <__fp_splitA+0x10>
 652:	5f 3f       	cpi	r21, 0xFF	; 255
 654:	71 f0       	breq	.+28     	; 0x672 <__fp_splitA+0x1a>
 656:	47 95       	ror	r20

00000658 <__fp_splitA>:
 658:	88 0f       	add	r24, r24
 65a:	97 fb       	bst	r25, 7
 65c:	99 1f       	adc	r25, r25
 65e:	61 f0       	breq	.+24     	; 0x678 <__fp_splitA+0x20>
 660:	9f 3f       	cpi	r25, 0xFF	; 255
 662:	79 f0       	breq	.+30     	; 0x682 <__fp_splitA+0x2a>
 664:	87 95       	ror	r24
 666:	08 95       	ret
 668:	12 16       	cp	r1, r18
 66a:	13 06       	cpc	r1, r19
 66c:	14 06       	cpc	r1, r20
 66e:	55 1f       	adc	r21, r21
 670:	f2 cf       	rjmp	.-28     	; 0x656 <__fp_split3+0xe>
 672:	46 95       	lsr	r20
 674:	f1 df       	rcall	.-30     	; 0x658 <__fp_splitA>
 676:	08 c0       	rjmp	.+16     	; 0x688 <__fp_splitA+0x30>
 678:	16 16       	cp	r1, r22
 67a:	17 06       	cpc	r1, r23
 67c:	18 06       	cpc	r1, r24
 67e:	99 1f       	adc	r25, r25
 680:	f1 cf       	rjmp	.-30     	; 0x664 <__fp_splitA+0xc>
 682:	86 95       	lsr	r24
 684:	71 05       	cpc	r23, r1
 686:	61 05       	cpc	r22, r1
 688:	08 94       	sec
 68a:	08 95       	ret

0000068c <__fp_zero>:
 68c:	e8 94       	clt

0000068e <__fp_szero>:
 68e:	bb 27       	eor	r27, r27
 690:	66 27       	eor	r22, r22
 692:	77 27       	eor	r23, r23
 694:	cb 01       	movw	r24, r22
 696:	97 f9       	bld	r25, 7
 698:	08 95       	ret

0000069a <__itoa_ncheck>:
 69a:	bb 27       	eor	r27, r27
 69c:	4a 30       	cpi	r20, 0x0A	; 10
 69e:	31 f4       	brne	.+12     	; 0x6ac <__itoa_ncheck+0x12>
 6a0:	99 23       	and	r25, r25
 6a2:	22 f4       	brpl	.+8      	; 0x6ac <__itoa_ncheck+0x12>
 6a4:	bd e2       	ldi	r27, 0x2D	; 45
 6a6:	90 95       	com	r25
 6a8:	81 95       	neg	r24
 6aa:	9f 4f       	sbci	r25, 0xFF	; 255
 6ac:	0c 94 59 03 	jmp	0x6b2	; 0x6b2 <__utoa_common>

000006b0 <__utoa_ncheck>:
 6b0:	bb 27       	eor	r27, r27

000006b2 <__utoa_common>:
 6b2:	fb 01       	movw	r30, r22
 6b4:	55 27       	eor	r21, r21
 6b6:	aa 27       	eor	r26, r26
 6b8:	88 0f       	add	r24, r24
 6ba:	99 1f       	adc	r25, r25
 6bc:	aa 1f       	adc	r26, r26
 6be:	a4 17       	cp	r26, r20
 6c0:	10 f0       	brcs	.+4      	; 0x6c6 <__utoa_common+0x14>
 6c2:	a4 1b       	sub	r26, r20
 6c4:	83 95       	inc	r24
 6c6:	50 51       	subi	r21, 0x10	; 16
 6c8:	b9 f7       	brne	.-18     	; 0x6b8 <__utoa_common+0x6>
 6ca:	a0 5d       	subi	r26, 0xD0	; 208
 6cc:	aa 33       	cpi	r26, 0x3A	; 58
 6ce:	08 f0       	brcs	.+2      	; 0x6d2 <__utoa_common+0x20>
 6d0:	a9 5d       	subi	r26, 0xD9	; 217
 6d2:	a1 93       	st	Z+, r26
 6d4:	00 97       	sbiw	r24, 0x00	; 0
 6d6:	79 f7       	brne	.-34     	; 0x6b6 <__utoa_common+0x4>
 6d8:	b1 11       	cpse	r27, r1
 6da:	b1 93       	st	Z+, r27
 6dc:	11 92       	st	Z+, r1
 6de:	cb 01       	movw	r24, r22
 6e0:	0c 94 72 03 	jmp	0x6e4	; 0x6e4 <strrev>

000006e4 <strrev>:
 6e4:	dc 01       	movw	r26, r24
 6e6:	fc 01       	movw	r30, r24
 6e8:	67 2f       	mov	r22, r23
 6ea:	71 91       	ld	r23, Z+
 6ec:	77 23       	and	r23, r23
 6ee:	e1 f7       	brne	.-8      	; 0x6e8 <strrev+0x4>
 6f0:	32 97       	sbiw	r30, 0x02	; 2
 6f2:	04 c0       	rjmp	.+8      	; 0x6fc <strrev+0x18>
 6f4:	7c 91       	ld	r23, X
 6f6:	6d 93       	st	X+, r22
 6f8:	70 83       	st	Z, r23
 6fa:	62 91       	ld	r22, -Z
 6fc:	ae 17       	cp	r26, r30
 6fe:	bf 07       	cpc	r27, r31
 700:	c8 f3       	brcs	.-14     	; 0x6f4 <strrev+0x10>
 702:	08 95       	ret

00000704 <_exit>:
 704:	f8 94       	cli

00000706 <__stop_program>:
 706:	ff cf       	rjmp	.-2      	; 0x706 <__stop_program>
